{"version":3,"sources":["../packages/risks/src/domain/data/RisksStore.js","../packages/date-utils/src/toISOString.js","../packages/risks/src/domain/models/Risk.js","../packages/risks/src/domain/services/RisksService.js","auth/domain/services/logout.js","menu/ui/AppMenuContext.js","menu/ui/AppMenu.js","SimpleAppBar.js","Page.js","PageWithAppBar.js","../packages/companies/src/domain/models/Company.js","../packages/risks/src/domain/models/RisksCollection.js","priveleges/Permit.js","companies/ui/constants.js","../packages/date-utils/src/formatDate.js","../packages/risks/src/domain/services/isHighRisk.js","companies/ui/table/CompaniesTableItem.js","companies/ui/table/CompaniesTable.js","AppContext.js","companies/ui/CompaniesTablePage.js","FormPage.js","../packages/companies/src/domain/models/Payment.js","form/ui/validators.js","companies/ui/payment-history/PaymentHistory.js","companies/ui/payment-form/PaymentForm.js","companies/ui/form/CompanyForm.js","companies/ui/EditCompanyPage.js","companies/ui/CreateCompanyPage.js","../packages/companies/src/domain/data/CompaniesStore.js","../packages/companies/src/domain/services/CompaniesService.js","auth/domain/errors/UserNotFoundError.js","auth/domain/errors/IncorrectPasswordError.js","auth/domain/services/authenticate.js","auth/ui/form/LoginForm.js","auth/ui/LoginPage.js","auth/domain/services/isAuthenticated.js","auth/ui/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["index_browser_es","plugin","lib_index_browser_es","data_RisksStore","_ref","dbUrl","db","concat","getList","allDocs","include_docs","getByCompanyId","_getByCompanyId","Object","asyncToGenerator","regenerator_default","a","mark","_callee","companyId","getFirstResult","wrap","_context","prev","next","pipe","view","lensProp","head","abrupt","find","selector","then","stop","_x","apply","this","arguments","saveItem","_saveItem","_callee2","item","_context2","post","_x2","updateItem","_updateItem","_callee3","_context3","put","_x3","toISOString","date","Risk_create","value","createdDate","Date","lastUpdatedDate","Risk_update","_ref2","risk","objectSpread","getCompanyId","getValue","modelUrl","services_RisksService","listener","risksStore","calculate","_calculate","model","xs","ys","tf_esm","sent","t0","add","dense","units","inputShape","compile","loss","optimizer","fit","epochs","save","predict","min","max","Math","ceil","floor","random","subscribe","l","unsubscribe","logout","localStorage","removeItem","AppMenuContext","createContext","openMenu","AppMenu","classes","children","history","_useState","useState","_useState2","slicedToArray","isOpened","setIsOpened","react_default","createElement","ui_AppMenuContext","Provider","Drawer_default","open","onClose","List_default","className","list","ListItem_default","button","onClick","replace","pathname","defaultProps","withRouter","withStyles","width","SimpleAppBar","props","title","useContext","Fragment","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","variant","ui_AppMenu","theme","flexGrow","marginLeft","marginRight","buttonIconLeft","spacing","unit","root","display","flexFlow","height","classnames","PageWithAppBar","appBar","isLoading","src_Page","gridContainer","CircularProgress_default","progress","src_SimpleAppBar","maxHeight","overflow","alignSelf","margin","Company_getId","getName","getFoundationDate","getPaymentHistory","defaultTo","RisksCollection_getByCompanyId","risks","Permit","getItem","PropTypes","shape","charterCapital","number","isRequired","_id","string","name","lastUpdated","instanceOf","foundationDate","formatDate","format_default","isHighRisk","CompaniesTableItem","company","onRecalculate","getId","TableRow_default","TableCell_default","align","style","backgroundColor","Tooltip_default","react_router_dom","to","Edit_default","fontSize","Refresh_default","CompaniesTable","companies","onAddButtonClick","Paper_default","Table_default","table","TableHead_default","TableBody_default","map","table_CompaniesTableItem","key","Fab_default","fab","Add_default","overflowX","minWidth","bottom","right","AppContext","services","getRows","mapDocs","selectDocumentsList","CompaniesTablePage","state","setState","_useContext$services","companiesService","risksService","fetchCompanies","response","getCompanies","fetchRisks","_ref3","useEffect","src_PageWithAppBar","table_CompaniesTable","push","categoryId","justifyContent","paddingTop","formContainer","flex","maxWidth","restProps","objectWithoutProperties","assign","Grid_default","container","direction","component","Typography","Payment_create","construct","amount","plannedDate","cuid_default","Payment_getId","getDate","getPlannedDate","getAmount","required","Boolean","undefined","isDataValid","isValid","isNumber","Number","isInteger","parseInt","PaymentHistory","paymentHistory","Table_Table","TableHead_TableHead","TableRow_TableRow","TableCell_TableCell","TableBody_TableBody","row","PaymentForm","onSubmit","react_final_form_es","handleSubmit","submitting","alignItems","validate","either","input","_ref3$meta","meta","error","touched","TextField_default","fullWidth","helperText","label","_ref4","_ref4$meta","placeholder","_ref5","_ref5$meta","disabled","CompanyForm","onReset","formattedCompany","useMemo","initialValues","values","autoFocus","type","_ref6","_ref6$input","onChange","Typography_Typography_default","payment","createPayment","append","justify","Button_default","EditCompanyPage","match","params","id","companyName","fetchCompany","result","getCompanyById","finish","editCompany","src_FormPage","e","preventDefault","CreateCompanyPage","createCompany","stopPropagation","data_CompaniesStore","getById","_getById","get","services_CompaniesService","companiesStore","data","Company_create","updatedCompany","Company_update","UserNotFoundError","login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Error","IncorrectPasswordError","authenticate","Promise","resolve","reject","password","setItem","LoginForm","submitError","alignContent","form","message","defineProperty","FORM_ERROR","paragraph","form_LoginForm","isAuthenticated","SecureRoute","react_router","CompaniesService","CompaniesStore","RisksService","RisksStore","App","src_AppContext","path","LoginPage","ui_SecureRoute","exact","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c701e059.chunk.js","sourcesContent":["import _regeneratorRuntime from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport PouchDB from \"pouchdb\";\nimport PouchDBFind from \"pouchdb-find\";\nimport view from 'ramda/es/view';\nimport lensProp from \"ramda/es/lensProp\";\nimport pipe from \"ramda/es/pipe\";\nimport head from \"ramda/es/head\";\nPouchDB.plugin(PouchDBFind);\n\nvar RisksStore = function RisksStore(_ref) {\n  var dbUrl = _ref.dbUrl;\n  var db = new PouchDB(\"\".concat(dbUrl, \"/risks\"));\n  return {\n    getList: function getList() {\n      return db.allDocs({\n        include_docs: true\n      });\n    },\n    getByCompanyId: function () {\n      var _getByCompanyId = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(companyId) {\n        var getFirstResult;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                getFirstResult = pipe(view(lensProp('docs')), head);\n                return _context.abrupt(\"return\", db.find({\n                  selector: {\n                    companyId: companyId\n                  }\n                }).then(getFirstResult));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getByCompanyId(_x) {\n        return _getByCompanyId.apply(this, arguments);\n      }\n\n      return getByCompanyId;\n    }(),\n    saveItem: function () {\n      var _saveItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(item) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", db.post(item));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function saveItem(_x2) {\n        return _saveItem.apply(this, arguments);\n      }\n\n      return saveItem;\n    }(),\n    updateItem: function () {\n      var _updateItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(item) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", db.put(item));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateItem(_x3) {\n        return _updateItem.apply(this, arguments);\n      }\n\n      return updateItem;\n    }()\n  };\n};\n\nexport default RisksStore;","export default function toISOString(date) {\n  return date.toISOString();\n}","import _objectSpread from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport view from \"ramda/es/view\";\nimport lensProp from \"ramda/es/lensProp\";\nimport toISOString from \"@logistics-calc/date-utils/src/toISOString\";\nexport var create = function create(_ref) {\n  var companyId = _ref.companyId,\n      value = _ref.value;\n  return {\n    value: value,\n    companyId: companyId,\n    createdDate: toISOString(new Date()),\n    lastUpdatedDate: null\n  };\n};\nexport var update = function update(_ref2, risk) {\n  var value = _ref2.value;\n  return _objectSpread({}, risk, {\n    value: value,\n    lastUpdatedDate: toISOString(new Date())\n  });\n};\nexport var getId = view(lensProp('_id'));\nexport var getCompanyId = view(lensProp('companyId'));\nexport var getValue = view(lensProp('value'));","import _regeneratorRuntime from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport { create, update } from \"@logistics-calc/risks/src/domain/models/Risk\";\nvar modelUrl = 'localstorage://logistics-risks-model';\n\nvar getRandomInt = function getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nvar RisksService = function RisksService(_ref) {\n  var risksStore = _ref.risksStore;\n  var listener;\n  return {\n    calculate: function () {\n      var _calculate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(companyId) {\n        var model, xs, ys, risk, value;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return tf.loadLayersModel(modelUrl);\n\n              case 3:\n                model = _context.sent;\n                _context.next = 17;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                model = tf.sequential();\n                model.add(tf.layers.dense({\n                  units: 1,\n                  inputShape: [1]\n                }));\n                model.compile({\n                  loss: 'meanSquaredError',\n                  optimizer: 'SGD'\n                });\n                xs = tf.tensor2d([[1], [2], [3], [4]], [4, 1]);\n                ys = tf.tensor2d([[1], [3], [5], [7]], [4, 1]);\n                _context.next = 15;\n                return model.fit(xs, ys, {\n                  epochs: 500\n                });\n\n              case 15:\n                _context.next = 17;\n                return model.save(modelUrl);\n\n              case 17:\n                model.predict(tf.tensor2d([[5]], [1, 1]));\n                _context.next = 20;\n                return risksStore.getByCompanyId(companyId);\n\n              case 20:\n                risk = _context.sent;\n                value = getRandomInt(10, 100);\n\n                if (!risk) {\n                  _context.next = 27;\n                  break;\n                }\n\n                _context.next = 25;\n                return risksStore.updateItem(update({\n                  value: value\n                }, risk));\n\n              case 25:\n                _context.next = 29;\n                break;\n\n              case 27:\n                _context.next = 29;\n                return risksStore.saveItem(create({\n                  value: value,\n                  companyId: companyId\n                }));\n\n              case 29:\n                if (listener) {\n                  listener();\n                }\n\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n\n      function calculate(_x) {\n        return _calculate.apply(this, arguments);\n      }\n\n      return calculate;\n    }(),\n    getList: function getList() {\n      return risksStore.getList();\n    },\n    subscribe: function subscribe(l) {\n      listener = l;\n    },\n    unsubscribe: function unsubscribe() {\n      listener = null;\n    }\n  };\n};\n\nexport default RisksService;","function logout() {\n  localStorage.removeItem('isAuthenticated');\n}\n\nexport default logout;\n","import { createContext } from 'react';\n\nconst AppMenuContext = createContext({ openMenu: null });\n\nexport default AppMenuContext;\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport List from \"@material-ui/core/List/index\";\nimport ListItem from \"@material-ui/core/ListItem/index\";\nimport Drawer from \"@material-ui/core/Drawer/index\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport logout from \"../../auth/domain/services/logout\";\n\nimport AppMenuContext from './AppMenuContext';\n\n\nconst styles = {\n  list: {\n    width: '250px',\n  },\n};\n\nfunction AppMenu({ classes, children, history }) {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const openMenu = () => {\n    setIsOpened(true);\n  };\n\n  const onLogoutClick = () => {\n    logout();\n    history.replace({ pathname: '/login' });\n  };\n\n  return (\n    <AppMenuContext.Provider\n      value={{\n        openMenu,\n      }}\n    >\n      <Drawer\n        open={isOpened}\n        onClose={() => setIsOpened(false)}\n      >\n        <List className={classes.list}>\n          <ListItem button onClick={onLogoutClick}>\n            Logout\n          </ListItem>\n        </List>\n      </Drawer>\n      { children }\n    </AppMenuContext.Provider>\n  )\n}\n\n\nAppMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onLogout: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nAppMenu.defaultProps = {\n  open: false,\n};\n\nexport default withRouter(withStyles(styles)(AppMenu));\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SimpleDrawer from \"./menu/ui/AppMenu\";\nimport AppMenuContext from \"./menu/ui/AppMenuContext\";\n\nconst styles = theme => ({\n  title: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  buttonIconLeft: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nfunction SimpleAppBar(props) {\n  const { classes, title } = props;\n  const { openMenu } = useContext(AppMenuContext);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={openMenu}\n          >\n            <MenuIcon/>\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <SimpleDrawer />\n    </>\n  );\n}\n\nSimpleAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string\n};\n\nSimpleAppBar.defaultProps = {\n  title: \"Logistics Risks Calculator\"\n};\n\nexport default withStyles(styles)(SimpleAppBar);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    flexGrow: 1,\n    height: '100%',\n  },\n};\n\nfunction Page({ className, classes, children }) {\n  return <div className={classnames(classes.root, className)}>{ children }</div>\n}\n\nexport default withStyles(styles)(Page);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport SimpleAppBar from './SimpleAppBar';\nimport Page from './Page';\n\n\nconst styles = {\n  gridContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    maxHeight: '100%',\n    overflow: 'auto',\n  },\n  progress: {\n    alignSelf: 'center',\n    margin: 'auto',\n  },\n};\n\n\nfunction PageWithAppBar({ appBar, className, classes, children, isLoading }) {\n  return (\n    <Page className={className}>\n      { appBar }\n      <div className={classes.gridContainer}>\n        {isLoading ? <CircularProgress className={classes.progress}/> : children}\n      </div>\n    </Page>\n  )\n}\n\nPageWithAppBar.propTypes = {\n  appBar: PropTypes.node,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool,\n};\n\nPageWithAppBar.defaultProps = {\n  appBar: <SimpleAppBar />,\n  isLoading: false,\n};\n\nexport default withStyles(styles)(PageWithAppBar);\n","import _objectSpread from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport lensProp from 'ramda/es/lensProp';\nimport view from 'ramda/es/view';\nimport pipe from \"ramda/es/pipe\";\nimport defaultTo from \"ramda/es/defaultTo\";\nimport toISOString from '@logistics-calc/date-utils/src/toISOString';\nexport var create = function create(_ref) {\n  var name = _ref.name,\n      foundationDate = _ref.foundationDate,\n      charterCapital = _ref.charterCapital;\n  return {\n    charterCapital: charterCapital,\n    foundationDate: foundationDate,\n    lastUpdatedDate: null,\n    name: name,\n    createdDate: toISOString(new Date()),\n    paymentHistory: []\n  };\n};\nexport var update = function update(_ref2, company) {\n  var name = _ref2.name,\n      foundationDate = _ref2.foundationDate,\n      charterCapital = _ref2.charterCapital,\n      paymentHistory = _ref2.paymentHistory;\n  return _objectSpread({}, company, {\n    charterCapital: charterCapital,\n    foundationDate: foundationDate,\n    lastUpdatedDate: toISOString(new Date()),\n    name: name,\n    paymentHistory: paymentHistory\n  });\n};\nexport var getId = view(lensProp('_id'));\nexport var getName = view(lensProp('name'));\nexport var getFoundationDate = view(lensProp('foundationDate'));\nexport var getPaymentHistory = pipe(view(lensProp(\"paymentHistory\")), defaultTo([]));","import { getCompanyId } from \"./Risk\";\nexport var getByCompanyId = function getByCompanyId(companyId, risks) {\n  return risks.find(function (risk) {\n    return getCompanyId(risk) === companyId;\n  });\n};","export default function Permit({ children }) {\n  return localStorage.getItem('isAdmin') === 'true' ? children : null;\n}\n","import PropTypes from 'prop-types';\n\nexport const COMPANY_SHAPE = PropTypes.shape({\n  charterCapital: PropTypes.number.isRequired,\n  _id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  lastUpdated: PropTypes.instanceOf(Date),\n  foundationDate: PropTypes.string.isRequired\n});\n","import format from \"date-fns/format\";\nexport default function formatDate(date) {\n  return format(date, 'MM/DD/YYYY');\n}","import { getValue } from '../models/Risk';\n/**\n * @param {Risk} risk\n * @returns {boolean}\n */\n\nexport default function isHighRisk(risk) {\n  return getValue(risk) > 50;\n}","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Link } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport TableRow from '@material-ui/core/TableRow';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport formatDate from '@logistics-calc/date-utils/src/formatDate';\n\nimport isHighRisk from '@logistics-calc/risks/src/domain/services/isHighRisk';\nimport { getValue } from '@logistics-calc/risks/src/domain/models/Risk';\n\nimport {\n  getFoundationDate,\n  getId,\n  getName\n} from '@logistics-calc/companies/src/domain/models/Company';\n\nimport Permit from '../../../priveleges/Permit';\n\nfunction CompaniesTableItem(props) {\n  const { company, onRecalculate, risk } = props;\n  const companyId = getId(company);\n  return (\n    <TableRow>\n      <TableCell>{getName(company)}</TableCell>\n      <TableCell\n        align=\"center\"\n        style={{\n          backgroundColor: risk ? (isHighRisk(risk) ? 'red' : 'green') : null\n        }}\n      >\n        {risk ? `${getValue(risk)}%` : '-'}\n      </TableCell>\n      <TableCell align=\"center\">\n        {formatDate(getFoundationDate(company))}\n      </TableCell>\n      <TableCell align=\"right\">\n        <Tooltip title=\"Edit\">\n          <Link to={`/company/${getId(company)}`}>\n            <IconButton aria-label=\"Recalculate\">\n              <EditIcon fontSize=\"small\" />\n            </IconButton>\n          </Link>\n        </Tooltip>\n        <Permit>\n          <Tooltip title=\"Recalculate\">\n            <IconButton\n              aria-label=\"Recalculate\"\n              onClick={() => onRecalculate(companyId)}\n            >\n              <RefreshIcon fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Permit>\n      </TableCell>\n    </TableRow>\n  );\n}\n\nexport default CompaniesTableItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles/index';\nimport Table from '@material-ui/core/Table/index';\nimport TableBody from '@material-ui/core/TableBody/index';\nimport TableCell from '@material-ui/core/TableCell/index';\nimport TableHead from '@material-ui/core/TableHead/index';\nimport TableRow from '@material-ui/core/TableRow/index';\nimport Fab from '@material-ui/core/Fab/index';\nimport Paper from '@material-ui/core/Paper/index';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { getId } from '@logistics-calc/companies/src/domain/models/Company';\n\nimport { getByCompanyId } from '@logistics-calc/risks/src/domain/models/RisksCollection';\n\nimport Permit from '../../../priveleges/Permit';\n\nimport { COMPANY_SHAPE } from '../constants';\nimport CompaniesTableItem from './CompaniesTableItem';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 700\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing.unit * 4,\n    right: theme.spacing.unit * 4\n  }\n});\n\nfunction CompaniesTable(props) {\n  const { classes, companies, onAddButtonClick, onRecalculate, risks } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Company name</TableCell>\n            <TableCell align=\"center\">Risk</TableCell>\n            <TableCell align=\"center\">Foundation date</TableCell>\n            <TableCell />\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {companies.map(company => {\n            const companyId = getId(company);\n            return (\n              <CompaniesTableItem\n                company={company}\n                key={companyId}\n                onRecalculate={onRecalculate}\n                risk={getByCompanyId(companyId, risks)}\n              />\n            );\n          })}\n        </TableBody>\n      </Table>\n      <Permit>\n        <Fab className={classes.fab} color=\"primary\" onClick={onAddButtonClick}>\n          <AddIcon />\n        </Fab>\n      </Permit>\n    </Paper>\n  );\n}\n\nCompaniesTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  companies: PropTypes.arrayOf(COMPANY_SHAPE),\n  onAddButtonClick: PropTypes.func,\n  onRecalculate: PropTypes.func,\n  risks: PropTypes.array\n};\n\nCompaniesTable.defaultProps = {\n  companies: [],\n  risks: []\n};\n\nexport default withStyles(styles)(CompaniesTable);\n","import { createContext } from 'react';\n\n\nconst AppContext = createContext({\n  services: {},\n});\n\nexport default AppContext;\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport lensProp from 'ramda/es/lensProp';\nimport view from 'ramda/es/view';\nimport map from 'ramda/es/map';\nimport pipe from 'ramda/es/pipe';\n\nimport PageWithAppBar from '../../PageWithAppBar';\n\nimport CompaniesTable from './table/CompaniesTable';\nimport AppMenu from '../../menu/ui/AppMenu';\nimport AppContext from '../../AppContext';\n\nconst getRows = view(lensProp('rows'));\nconst mapDocs = map(view(lensProp('doc')));\nconst selectDocumentsList = pipe(\n  getRows,\n  mapDocs\n);\n\nfunction CompaniesTablePage({ history }) {\n  const [state, setState] = useState({\n    companies: [],\n    isLoading: false,\n    risks: []\n  });\n  const {\n    services: { companies: companiesService, risks: risksService }\n  } = useContext(AppContext);\n\n  const fetchCompanies = async () => {\n    setState({ isLoading: true });\n    const response = await companiesService.getCompanies();\n    setState({\n      companies: selectDocumentsList(response),\n      isLoading: false\n    });\n  };\n\n  const fetchRisks = async () => {\n    const response = await risksService.getList();\n    setState(state => ({ ...state, risks: selectDocumentsList(response) }));\n  };\n\n  useEffect(() => {\n    fetchCompanies().then(fetchRisks);\n    risksService.subscribe(() => {\n      fetchRisks();\n    });\n    return () => {\n      risksService.unsubscribe();\n    };\n  }, []);\n\n  const onAddButtonClick = () => {\n    history.push({ pathname: '/company/' });\n  };\n\n  const onRecalculate = categoryId => {\n    risksService.calculate(categoryId);\n  };\n\n  return (\n    <AppMenu>\n      <PageWithAppBar isLoading={state.isLoading}>\n        <CompaniesTable\n          companies={state.companies}\n          onAddButtonClick={onAddButtonClick}\n          onRecalculate={onRecalculate}\n          risks={state.risks}\n        />\n      </PageWithAppBar>\n    </AppMenu>\n  );\n}\n\nexport default CompaniesTablePage;\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport PageWithAppBar from './PageWithAppBar';\n\nconst styles = ({ spacing }) => ({\n  gridContainer: {\n    justifyContent: 'center',\n    paddingTop: spacing.unit * 4\n  },\n  formContainer: {\n    flex: 1,\n    maxWidth: '700px'\n  }\n});\n\nfunction FormPage({ children, classes, isLoading, title, ...restProps }) {\n  return (\n    <PageWithAppBar\n      {...restProps}\n      classes={{ gridContainer: classes.gridContainer }}\n      isLoading={isLoading}\n    >\n      <Grid\n        className={classes.formContainer}\n        container\n        direction=\"column\"\n        wrap=\"nowrap\"\n        spacing={40}\n      >\n        <Grid component={Typography} item variant=\"title\">\n          {title}\n        </Grid>\n        <Grid item>{isLoading ? null : children}</Grid>\n      </Grid>\n    </PageWithAppBar>\n  );\n}\n\nexport default withStyles(styles)(FormPage);\n","import cuid from \"cuid\";\nimport construct from \"ramda/es/construct\";\nimport view from \"ramda/es/view\";\nimport lensProp from \"ramda/es/lensProp\";\nimport toISOString from \"@logistics-calc/date-utils/src/toISOString\";\n\nfunction Payment(_ref) {\n  var date = _ref.date,\n      amount = _ref.amount,\n      plannedDate = _ref.plannedDate;\n  return {\n    _id: cuid(),\n    date: toISOString(date),\n    amount: amount,\n    plannedDate: toISOString(plannedDate)\n  };\n}\n\nexport var create = construct(Payment);\nexport var getId = view(lensProp(\"_id\"));\nexport var getDate = view(lensProp(\"date\"));\nexport var getPlannedDate = view(lensProp(\"plannedDate\"));\nexport var getAmount = view(lensProp(\"amount\"));","import isValid from 'date-fns/is_valid';\n\nexport const required = value =>\n  Boolean(value) ? undefined : 'Value is required';\nexport const isDataValid = value =>\n  isValid(new Date(value)) ? undefined : 'Date should be in format MM/DD/YYYY';\nexport const isNumber = value =>\n  Number.isInteger(parseInt(value)) ? undefined : 'Should be a number';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport map from 'ramda/es/map';\n\nimport Table from '@material-ui/core/es/Table/Table';\nimport TableHead from '@material-ui/core/es/TableHead/TableHead';\nimport TableCell from '@material-ui/core/es/TableCell/TableCell';\nimport TableRow from '@material-ui/core/es/TableRow/TableRow';\nimport TableBody from '@material-ui/core/es/TableBody/TableBody';\n\nimport {\n  getAmount,\n  getDate,\n  getPlannedDate,\n  getId\n} from '@logistics-calc/companies/src/domain/models/Payment';\n\nexport default function PaymentHistory({ paymentHistory }) {\n  return (\n    <Table>\n      <TableHead>\n        <TableRow>\n          <TableCell align=\"center\">Planned date</TableCell>\n          <TableCell align=\"center\">Actual date</TableCell>\n          <TableCell align=\"center\">Amount</TableCell>\n        </TableRow>\n      </TableHead>\n      <TableBody>\n        {map(\n          row => (\n            <TableRow key={getId(row)}>\n              <TableCell align=\"center\">{getPlannedDate(row)}</TableCell>\n              <TableCell align=\"center\">{getDate(row)}</TableCell>\n              <TableCell align=\"center\">{getAmount(row)}</TableCell>\n            </TableRow>\n          ),\n          paymentHistory\n        )}\n      </TableBody>\n    </Table>\n  );\n}\n\nPaymentHistory.propTypes = {\n  paymentHistory: PropTypes.array\n};\n\nPaymentHistory.defaultProps = {\n  paymentHistory: []\n};\n","import React from 'react';\nimport { Field, Form } from 'react-final-form';\n\nimport either from 'ramda/es/either';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Add from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport { required, isDataValid, isNumber } from '../../../form/ui/validators';\n\nexport default function PaymentForm({ onSubmit }) {\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ handleSubmit, submitting }) => (\n        <Grid\n          alignItems=\"center\"\n          container\n          direction=\"row\"\n          spacing={32}\n          wrap=\"nowrap\"\n        >\n          <Grid item>\n            <Field name=\"plannedDate\" validate={either(required, isDataValid)}>\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Planned date\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Field name=\"date\" validate={either(required, isDataValid)}>\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Date\"\n                  placeholder=\"2/25/2012\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Field name=\"amount\" validate={either(required, isNumber)}>\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Amount\"\n                  placeholder=\"1000\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <IconButton\n              color=\"primary\"\n              disabled={submitting}\n              onClick={handleSubmit}\n              variant=\"outlined\"\n            >\n              <Add fontSize=\"small\" />\n            </IconButton>\n          </Grid>\n        </Grid>\n      )}\n    </Form>\n  );\n}\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, Field } from 'react-final-form';\n\nimport append from 'ramda/es/append';\n\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography/Typography';\n\nimport formatDate from '@logistics-calc/date-utils/src/formatDate';\nimport {\n  getFoundationDate,\n  getPaymentHistory\n} from '@logistics-calc/companies/src/domain/models/Company';\nimport { create as createPayment } from '@logistics-calc/companies/src/domain/models/Payment';\n\nimport { required, isDataValid } from '../../../form/ui/validators';\nimport Permit from '../../../priveleges/Permit';\n\nimport PaymentHistory from '../payment-history/PaymentHistory';\nimport PaymentForm from '../payment-form/PaymentForm';\n\nimport { COMPANY_SHAPE } from '../constants';\n\nexport default function CompanyForm({ company, onReset, onSubmit }) {\n  const onSubmitAdapter = values => {\n    onSubmit({\n      ...values,\n      foundationDate: new Date(values.foundationDate),\n      charterCapital: Number(values.charterCapital)\n    });\n  };\n\n  const formattedCompany = useMemo(() => {\n    if (!company) {\n      return company;\n    }\n\n    return {\n      ...company,\n      foundationDate: formatDate(getFoundationDate(company)),\n      paymentHistory: getPaymentHistory(company)\n    };\n  }, [company]);\n\n  return (\n    <Form initialValues={formattedCompany} onSubmit={onSubmitAdapter}>\n      {({ handleSubmit, submitting }) => (\n        <Grid\n          component=\"form\"\n          container\n          direction=\"column\"\n          onReset={onReset}\n          onSubmit={handleSubmit}\n          spacing={40}\n        >\n          <Grid item>\n            <Field name=\"name\" validate={required}>\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  autoFocus\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Name\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Field\n              name=\"foundationDate\"\n              validate={value => required(value) || isDataValid(value)}\n            >\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Foundation date\"\n                  placeholder=\"2/25/2012\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Field name=\"charterCapital\" validate={required}>\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Charter capital\"\n                  type=\"number\"\n                />\n              )}\n            </Field>\n          </Grid>\n\n          <Field name=\"paymentHistory\">\n            {({ input: { value, onChange } }) => (\n              <>\n                <Permit>\n                  <Grid item>\n                    <Typography variant=\"caption\">New payment</Typography>\n\n                    <PaymentForm\n                      onSubmit={values => {\n                        const payment = createPayment({\n                          date: new Date(values.date),\n                          amount: Number(values.amount),\n                          plannedDate: new Date(values.plannedDate)\n                        });\n                        onChange(append(payment, value));\n                      }}\n                    />\n                  </Grid>\n                </Permit>\n\n                <Grid item>\n                  <Typography variant=\"caption\">Payment history</Typography>\n                  <PaymentHistory paymentHistory={value} />\n                </Grid>\n              </>\n            )}\n          </Field>\n\n          <Grid item>\n            <Grid container justify=\"flex-end\" spacing={16}>\n              <Grid item>\n                <Button type=\"reset\">Cancel</Button>\n              </Grid>\n              <Permit>\n                <Grid item>\n                  <Button\n                    color=\"primary\"\n                    disabled={submitting}\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Submit\n                  </Button>\n                </Grid>\n              </Permit>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </Form>\n  );\n}\n\nCompanyForm.propTypes = {\n  company: COMPANY_SHAPE,\n  onReset: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SimpleAppBar from \"../../SimpleAppBar\";\n\nimport AppMenu from \"../../menu/ui/AppMenu\";\nimport FormPage from \"../../FormPage\";\nimport CompanyForm from \"./form/CompanyForm\";\nimport AppContext from \"../../AppContext\";\n\n\nfunction EditCompanyPage({ match, history }) {\n  const [state, setState] = useState({\n    company: null,\n    isLoading: true\n  });\n  const { services: { companies: companiesService } } = useContext(AppContext);\n\n  const companyId = match.params.id;\n  const { company, isLoading } = state;\n\n  const companyName = isLoading ? '' : company.name;\n\n  const fetchCompany = async () => {\n    setState(state => ({ ...state, isLoading: true }));\n    try {\n      const result = await companiesService.getCompanyById(companyId);\n      setState(state => ({\n        ...state,\n        company: result\n      }));\n    } finally {\n      setState(state => ({\n        ...state,\n        isLoading: false\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fetchCompany();\n  }, []);\n\n  const appBar = (\n    <SimpleAppBar\n      title={isLoading ? \"Please wait...\" : companyName}\n    />\n  );\n\n  const onReset = (e) => {\n    e.preventDefault();\n    history.replace({ pathname: '/' });\n  };\n\n  const onSubmit = async (values) => {\n    await companiesService.editCompany(company, values);\n    history.replace({ pathname: '/' });\n  };\n\n  return (\n    <AppMenu>\n      <FormPage\n        appBar={appBar}\n        isLoading={state.isLoading}\n        title={`Edit ${companyName}`}\n      >\n        <CompanyForm\n          company={company}\n          onReset={onReset}\n          onSubmit={onSubmit}\n        />\n      </FormPage>\n    </AppMenu>\n  );\n}\n\nEditCompanyPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func,\n  }).isRequired,\n};\n\nexport default EditCompanyPage;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SimpleAppBar from \"../../SimpleAppBar\";\n\nimport AppMenu from \"../../menu/ui/AppMenu\";\nimport FormPage from \"../../FormPage\";\nimport CompanyForm from \"./form/CompanyForm\";\nimport AppContext from \"../../AppContext\";\n\n\nfunction CreateCompanyPage({ history }) {\n  const { services: { companies } } = useContext(AppContext);\n\n  const appBar = (\n    <SimpleAppBar\n      title=\"Create new company\"\n    />\n  );\n\n  const onReset = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    history.replace('/');\n  };\n\n  const onSubmit = async (values) => {\n    await companies.createCompany(values);\n    history.replace('/');\n  };\n\n  return (\n    <AppMenu>\n      <FormPage\n        appBar={appBar}\n        title={`Create new company`}\n      >\n        <CompanyForm\n          onReset={onReset}\n          onSubmit={onSubmit}\n        />\n      </FormPage>\n    </AppMenu>\n  );\n}\n\nCreateCompanyPage.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func,\n  }).isRequired,\n};\n\nexport default CreateCompanyPage;\n","import _regeneratorRuntime from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dzianis_roi/Projects/logistics-risks-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport PouchDb from 'pouchdb';\n\nvar CompaniesStore = function CompaniesStore(_ref) {\n  var dbUrl = _ref.dbUrl;\n  var db = new PouchDb(\"\".concat(dbUrl, \"/companies\"));\n  return {\n    getList: function getList() {\n      return db.allDocs({\n        include_docs: true\n      });\n    },\n    getById: function () {\n      var _getById = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", db.get(id));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getById(_x) {\n        return _getById.apply(this, arguments);\n      }\n\n      return getById;\n    }(),\n    saveItem: function () {\n      var _saveItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(item) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", db.post(item));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function saveItem(_x2) {\n        return _saveItem.apply(this, arguments);\n      }\n\n      return saveItem;\n    }(),\n    updateItem: function () {\n      var _updateItem = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(item) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                return _context3.abrupt(\"return\", db.put(item));\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function updateItem(_x3) {\n        return _updateItem.apply(this, arguments);\n      }\n\n      return updateItem;\n    }()\n  };\n};\n\nexport default CompaniesStore;","import { create, update } from \"../models/Company\";\n\nvar CompaniesService = function CompaniesService(_ref) {\n  var companiesStore = _ref.companiesStore;\n  return {\n    createCompany: function createCompany(data) {\n      var company = create(data);\n      return companiesStore.saveItem(company);\n    },\n    editCompany: function editCompany(company, data) {\n      var updatedCompany = update(data, company);\n      return companiesStore.updateItem(updatedCompany);\n    },\n    getCompanies: function getCompanies() {\n      return companiesStore.getList();\n    },\n    getCompanyById: function getCompanyById(id) {\n      return companiesStore.getById(id);\n    }\n  };\n};\n\nexport default CompaniesService;","export default class UserNotFoundError extends Error {\n  constructor(login) {\n    super(`User \"${login}\" doesn't exist`);\n  }\n}\n","export default class IncorrectPasswordError extends Error {\n  constructor() {\n    super(`Invalid password`);\n  }\n}\n","import UserNotFoundError from '../errors/UserNotFoundError';\nimport IncorrectPasswordError from '../errors/IncorrectPasswordError';\n\nfunction authenticate(values) {\n  return new Promise((resolve, reject) => {\n    const { login, password } = values;\n\n    if (login !== 'admin' && login !== 'user') {\n      reject(new UserNotFoundError(login));\n      return;\n    }\n\n    if (\n      (login === 'admin' && password !== 'admin') ||\n      (login === 'user' && password !== 'user')\n    ) {\n      reject(new IncorrectPasswordError());\n      return;\n    }\n\n    localStorage.setItem('isAuthenticated', 'true');\n    localStorage.setItem('isAdmin', login === 'admin');\n\n    resolve();\n  });\n}\n\nexport default authenticate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Field } from \"react-final-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { required } from '../../../form/ui/validators';\n\n\nfunction LoginForm({ className, onSubmit }) {\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ handleSubmit, submitError, submitting }) => (\n        <Grid\n          alignContent=\"center\"\n          className={className}\n          component=\"form\"\n          container\n          onSubmit={handleSubmit}\n          spacing={40}\n        >\n          {submitError ? (\n            <Grid\n              color=\"error\"\n              component={Typography}\n              item\n              xs={12}\n            >\n              {submitError}\n            </Grid>\n          ) : null}\n\n          <Grid item xs={12}>\n            <Field\n              name=\"login\"\n              validate={required}\n            >\n              {({ input, meta: { error, touched, submitError } }) => (\n                <TextField\n                  {...input}\n                  autoFocus\n                  error={touched && Boolean(error || submitError)}\n                  fullWidth\n                  helperText={touched && (error || submitError)}\n                  placeholder=\"Login\"\n                />\n              )}\n            </Field>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Field\n              name=\"password\"\n              validate={required}\n            >\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n              )}\n            </Field>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              disabled={submitting}\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n    </Form>\n  );\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired\n};\n\nLoginForm.defaultProps = {\n  className: \"\"\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FORM_ERROR } from \"final-form\";\n\nimport Page from '../../Page';\n\nimport authenticate from '../domain/services/authenticate';\n\nimport LoginForm from './form/LoginForm';\nimport UserNotFoundError from \"../domain/errors/UserNotFoundError\";\nimport IncorrectPasswordError from \"../domain/errors/IncorrectPasswordError\";\n\n\nconst styles = (theme) => ({\n  root: {\n    paddingTop: theme.spacing.unit * 8,\n  },\n  form: {\n    margin: `${theme.spacing.unit * 8}px auto`,\n    maxWidth: '360px',\n  }\n});\n\nfunction LoginPage({ classes, history }) {\n  const onSubmit = async (values) => {\n    try {\n      await authenticate(values);\n      history.replace({ pathname: '/' });\n    } catch(e) {\n      if (e instanceof UserNotFoundError) {\n        return { login: e.message };\n      } else if (e instanceof IncorrectPasswordError) {\n        return { [FORM_ERROR]: 'Incorrect credentials' };\n      }\n\n      throw e;\n    }\n  };\n\n  return (\n    <Page classes={{ root: classes.root }}>\n      <Typography\n        align=\"center\"\n        paragraph={false}\n        variant=\"title\"\n      >\n        Welcome\n      </Typography>\n\n      <Typography\n        align=\"center\"\n        color=\"textSecondary\"\n      >\n        to\n      </Typography>\n\n      <Typography\n        align=\"center\"\n        color=\"primary\"\n        variant=\"headline\"\n      >\n        Logistics Risks Calculator\n      </Typography>\n\n      <LoginForm\n        className={classes.form}\n        onSubmit={onSubmit}\n      />\n    </Page>\n  );\n}\n\nexport default withStyles(styles)(LoginPage);\n","function isAuthenticated() {\n  return localStorage.getItem('isAuthenticated') === 'true';\n}\n\nexport default isAuthenticated;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport isAuthenticated from \"../domain/services/isAuthenticated\";\n\nfunction SecureRoute({ children }) {\n  if (!isAuthenticated()) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/login',\n        }}\n      />\n    )\n  }\n\n  return children;\n}\n\nexport default SecureRoute;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport RisksStore from '@logistics-calc/risks/src/domain/data/RisksStore';\nimport RisksService from '@logistics-calc/risks/src/domain/services/RisksService';\n\nimport CompaniesTablePage from './companies/ui/CompaniesTablePage';\nimport EditCompanyPage from './companies/ui/EditCompanyPage';\nimport CreateCompanyPage from './companies/ui/CreateCompanyPage';\nimport CompaniesStore from '@logistics-calc/companies/src/domain/data/CompaniesStore';\nimport CompaniesService from '@logistics-calc/companies/src/domain/services/CompaniesService';\nimport LoginPage from './auth/ui/LoginPage';\nimport SecureRoute from './auth/ui/SecureRoute';\nimport AppContext from './AppContext';\n\nimport './App.css';\n\nconst dbUrl =\n  'https://609ce380-698c-48ed-a70f-6eefc8446f54-bluemix:ee5cf67260942c15b000fceeede84f7762628d5fbdf85a83d26bf4225656e333@609ce380-698c-48ed-a70f-6eefc8446f54-bluemix.cloudantnosqldb.appdomain.cloud';\n\nconst companiesStore = CompaniesStore({ dbUrl });\nconst companiesService = CompaniesService({ companiesStore });\nconst risksStore = RisksStore({ dbUrl });\nconst risksService = RisksService({ risksStore });\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContext.Provider\n        value={{\n          services: { companies: companiesService, risks: risksService }\n        }}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/login\" component={LoginPage} />\n\n            <SecureRoute>\n              <Route exact path=\"/\" component={CompaniesTablePage} />\n              <Route exact path=\"/company/\" component={CreateCompanyPage} />\n              <Route path=\"/company/:id\" component={EditCompanyPage} />\n            </SecureRoute>\n          </Switch>\n        </Router>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}